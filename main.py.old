import numpy as np
import collect
import compute
import vis

def main():
    # First, compute the face classes for each person.
    # We'll leave out the first image for each person,
    # since this step represents the "training", and
    # we would like to use the first image as the
    # "test" for our system at the end.
    face_classes = []
    faces_all = []
    test_faces = []
    for i in range(1, 15 + 1):
        # Retrieve the images from the disk.
        images = collect.get_images(i)

        # Turn the images into vectors.
        faces = [img.flatten() for img in images]
        faces_all.extend(faces[1:])
        test_faces.append(faces[0])

        # Compute eigenfaces.
        mean, eigenfaces = compute.eigenfaces(faces[1:])

        # Compute change-of-basis matrix.
        basis = np.stack(eigenfaces)

        # Compute face class.
        face_class = compute.face_class(mean, basis, faces)
        face_classes.append(face_class)

        print("Face class {} computed.".format(i))

    # Now, we want to compute the change-of-basis matrix
    # over the entire data set (again, leaving off the first
    # image from each set). This will represent our subspace
    # which is necessary for classifying new images.

    # Compute eigenfaces.
    mean, eigenfaces = compute.eigenfaces(faces_all)
    
    # Compute change-of-basis matrix.
    basis = np.stack(eigenfaces)

    for test_face in test_faces:
        print("_________________________")
        #print("test_face: " + str(test_face))
        normal_face = test_face - mean
        #print("normal_face: " + str(normal_face))
        coords = basis.dot(normal_face)
        #print("coords: " + str(coords))

        min_class = None
        min_mag = None
        for i, face_class in enumerate(face_classes):
            diff = face_class - coords
            mag = np.linalg.norm(diff)
            print(mag)
            if (min_mag is None or mag < min_mag):
                min_mag = mag
                min_class = i
        print("Best class match: " + (str(min_class + 1)))

    pass


main()